# this is for Klipper

[mcu]
# PASTE THE PATH YOU FIND FROM 'ls /dev/serial/by-id/*' HERE
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_56FF6D064856855127382367-if00

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 800
max_z_velocity: 1
max_z_accel: 100

[stepper_x]
step_pin: PA1
dir_pin: !PA2
# enable_pin is omitted because I don't have one
microsteps: 16
rotation_distance: 74
endstop_pin: ^PB8      # Add a ! if it needs to be inverted: !^PB8
position_endstop: 0
position_max: 160      # in mm
homing_speed: 25

[stepper_y]
step_pin: PB1
dir_pin: PB0
microsteps: 16
rotation_distance: 74 
endstop_pin: ^PB7
position_endstop: 0
position_max: 160      # in mm
homing_speed: 25

[servo my_pen]
pin: PB9
maximum_servo_angle: 180
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025
# found from manual calibration
initial_angle: 117

[stepper_z]
# This is a "virtual" axis for the pen lift.
# We assign the pins to a real but unused pin on the board 
# to satisfy Klipper's configuration requirements.
step_pin: PA3
dir_pin: PA4
enable_pin: !PA5
rotation_distance: 40
microsteps: 16
# We use an unused pin (PC15) as a dummy endstop.
# The '!' inverts the logic, so Klipper sees its default state as "triggered".
# This effectively mimics the 'virtual_endstop' feature.
endstop_pin: !PA6
position_min: 0
position_max: 5
position_endstop: 0

[homing_override]
axes: z
set_position_z: 0
gcode:
    # This G-code runs when you command "G28 Z" or "G28"
    # It doesn't move a motor, it just lifts the pen and tells Klipper "Z is now homed".
    G90
    PEN_UP
    SET_GCODE_OFFSET Z=0

# Add this section to save the pen state
# P.S. I never got this stateful pen up/down stuff working, so this can probably go away now
[save_variables]
filename: ~/plotter_variables.cfg

[gcode_macro PEN_DOWN]
gcode:
    SET_SERVO SERVO=my_pen ANGLE=45
    G4 P250

[gcode_macro PEN_UP]
gcode:
    SET_SERVO SERVO=my_pen ANGLE=117
    G4 P250

[include mainsail.cfg]
